{"version":3,"sources":["components/App/App.action.js","components/App/App.reduer.js","setup/config.js","components/App/App.effect.js","helper/request.helper.js","setup/redux.js","components/Svgs/FullScreen.jsx","components/App/App.jsx","components/App/App.container.js","setup/root.jsx","index.jsx"],"names":["fetchPen","createAction","dispatchFetchPen","dispatch","apply","arguments","setPen","pen","dispatchSetPen","initialState","reducers","Object","defineProperty","state","_ref","objectSpread","process","combineEpics","action$","pipe","ofType","map","R","mergeMap","path","_id","request","get","config","set","query","catch","console","log","tap","ignoreElements","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","name","compose","rootEpic","AppEpic","epicMiddleware","createEpicMiddleware","store","createStore","combineReducers","App","length","undefined","_ref2","type","payload","applyMiddleware","run","getState","FullScreen","props","react_default","a","createElement","assign","xmlns","version","id","x","y","width","height","viewBox","d","data-original","data-old_color","fill","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fullScreen","bind","assertThisInitialized","W","loadData","then","customize","start","iframe","iframeRef","contentWindow","document","open","write","concat","html","css","js","close","iRef","fullscreenElement","exitFullscreen","requestFullscreen","err","message","_this2","title","className","frameBorder","style","border","background","allowFullScreen","ref","onClick","React","Component","defaultProps","connect","setup_root","es","App_container","render","react_hot_loader","getElementById"],"mappings":"kRAIaA,EAAWC,YADC,aAEZC,EAAmB,kBAAaC,EAASH,EAAQI,WAAR,EAAAC,aAGzCC,EAASL,YADC,UACqB,SAAAM,GAAG,MAAK,CAAEA,SACzCC,EAAiB,kBAAaL,EAASG,EAAMF,WAAN,EAAAC,aCF9CI,EAAe,CACnBF,IAAK,IAODG,EAAQC,OAAAC,EAAA,EAAAD,CAAA,GDRS,UCSV,SAACE,EAADC,GAAA,IAAUP,EAAVO,EAAUP,IAAV,OAAAI,OAAAI,EAAA,EAAAJ,CAAA,GACNE,EADM,CAETN,mEClBYS,EACZ,oCCoBWC,cAfW,SAAAC,GAAO,OAC/BA,EAAQC,KACNC,YHLqB,aGMrBC,YAAIC,IAAO,YACXC,YAAS,SAAAT,GAAA,ICPcU,EDOXC,EAAHX,EAAGW,IAAH,OCPcD,EDQT,kBCPhBE,IAAQC,IAAIC,EAASJ,GAAMK,IAAI,8BAA+B,MDQvDC,MAAM,CAAEL,QACRM,MAAM,kBAAMC,QAAQC,IAAI,qBAE7BZ,YAAIC,IAAO,SACXY,YAAIF,QAAQC,KACZC,YAAI1B,GACJ2B,iBEPEC,EACc,kBAAXC,QAAuBA,OAAOC,qCACjCD,OAAOC,qCAAqC,CAC1CC,KAAM,qBAERC,IAGAC,EAAWxB,YAAayB,GACxBC,EAAiBC,cAEjBC,EAAQC,YACZC,YAAgB,CACdC,IJFW,eAACnC,EAADR,UAAA4C,OAAA,QAAAC,IAAA7C,UAAA,GAAAA,UAAA,GAASI,EAAT0C,EAAA9C,UAAA4C,OAAA,EAAA5C,UAAA,QAAA6C,EAAyBE,EAAzBD,EAAyBC,KAAMC,EAA/BF,EAA+BE,QAA/B,OACb3C,EAAS0C,GAAQ1C,EAAS0C,GAAMvC,EAAOwC,GAAWxC,KIGlDuB,EAAiBkB,YAAgBX,KAInCA,EAAeY,IAAId,OAEJtC,EAAuB0C,EAAvB1C,SAAUqD,EAAaX,EAAbW,SACVX,4DC/BAY,EAAA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,MAAAlD,OAAAmD,OAAA,CACEC,MAAM,6BACNC,QAAQ,MACRC,GAAG,SACHC,EAAE,MACFC,EAAE,MACFC,MAAM,QACNC,OAAO,QACPC,QAAQ,eACJZ,GAEJC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGI,GAAG,cACJN,EAAAC,EAAAC,cAAA,QACEU,EAAE,+IACFC,gBAAc,UACdC,iBAAe,UACfC,KAAK,eAIR,MClBY1B,qBACnB,SAAAA,EAAYU,GAAO,IAAAiB,EAAA,OAAAhE,OAAAiE,EAAA,EAAAjE,CAAAkE,KAAA7B,IACjB2B,EAAAhE,OAAAmE,EAAA,EAAAnE,CAAAkE,KAAAlE,OAAAoE,EAAA,EAAApE,CAAAqC,GAAAgC,KAAAH,KAAMnB,KACDuB,WAAaN,EAAKM,WAAWC,KAAhBvE,OAAAwE,EAAA,EAAAxE,CAAAgE,IAFDA,oFAKE,IACX3E,EAAa6E,KAAKnB,MAAlB1D,SACJqC,QAAUA,OAAO+C,EACnB/C,OAAO+C,EAAEC,WAAWC,KAAK,SAAAxE,GAA4B,IAAZW,EAAYX,EAAzByE,UAAa9D,IACnCA,GAAKzB,EAAS,CAAEyB,QACpBY,OAAO+C,EAAEI,UAENxF,EAAS,CAAEyB,IAAK,kDAGJ,IACXlB,EAAQsE,KAAKnB,MAAbnD,IACFkF,EAASZ,KAAKa,UAAUC,cAAcC,SAC5CH,EAAOI,OACPJ,EAAOK,MAAP,eAAAC,OAA4BxF,EAAIyF,KAAhC,mBACAP,EAAOK,MAAP,UAAAC,OAAuBxF,EAAI0F,IAA3B,aACAR,EAAOK,MAAP,WAAAC,OAAwBxF,EAAI2F,GAA5B,eACAT,EAAOU,6CAIP,IAAMC,EAAOvB,KAAKa,UACbE,SAASS,kBAYZT,SAASU,iBAXTF,EACGG,oBACAjB,KAAK,IACLvD,MAAM,SAAAyE,GACLxE,QAAQC,IAAR,gDAAA8D,OACkDS,EAAIC,QADtD,MAAAV,OAEES,EAAIjE,KAFN,yCAWC,IAAAmE,EAAA7B,KACQ8B,EAAY9B,KAAKnB,MAAxBnD,IAAOoG,MACf,OACEhD,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,QACbjD,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,SAASD,GACxBhD,EAAAC,EAAAC,cAAA,UACEgD,YAAY,IACZC,MAAO,CAAEC,OAAQ,OAAQC,WAAY,SACrCC,iBAAe,EACfN,MAAM,uBACN1C,GAAG,WACHiD,IAAK,SAAAzB,GACHiB,EAAKhB,UAAYD,GAEnBrB,MAAM,SAERT,EAAAC,EAAAC,cAACJ,EAAD,CAAY0D,QAAStC,KAAKI,WAAY2B,UAAU,uBA5DvBQ,IAAMC,YAuEvCrE,EAAIsE,aAAe,GCpEnB,IAQeC,cARS,iBAAO,CAC7BhH,IPC2Be,IAAO,CAAC,MAAO,OAAfA,CAAuBkC,OOEzB,iBAAO,CAChCxD,SAAUE,IAGGqH,CAGbvE,GCZawE,EAAA,kBACb7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAU5E,MAAOA,GACfc,EAAAC,EAAAC,cAAC6D,EAAD,QCHFC,iBACEhE,EAAAC,EAAAC,cAAC+D,EAAA,aAAD,KACEjE,EAAAC,EAAAC,cAAC2D,EAAD,OAEFnF,OAAOuD,SAASiC,eAAe","file":"static/js/main.00c64db8.chunk.js","sourcesContent":["import { createAction } from 'redux-actions'\nimport { dispatch } from '../../setup/redux'\n\nexport const FETCH_PEN = 'FETCH_PEN'\nexport const fetchPen = createAction(FETCH_PEN)\nexport const dispatchFetchPen = (...args) => dispatch(fetchPen(...args))\n\nexport const SET_PEN = 'SET_PEN'\nexport const setPen = createAction(SET_PEN, pen => ({ pen }))\nexport const dispatchSetPen = (...args) => dispatch(setPen(...args))\n","// modules\nimport * as R from 'ramda'\n// local modules\nimport { getState } from '../../setup/redux'\nimport { SET_PEN } from './App.action'\n\n// state\nconst initialState = {\n  pen: {},\n}\n\n// views\nexport const penView = () => R.path(['App', 'pen'])(getState())\n\n// reducers\nconst reducers = {\n  [SET_PEN]: (state, { pen }) => ({\n    ...state,\n    pen,\n  }),\n}\n\nexport default (state = initialState, { type, payload }) =>\n  reducers[type] ? reducers[type](state, payload) : state\n","export default (process.env.NODE_ENV === 'production'\n  ? 'https://wapp.weblite.me/pennelite'\n  : 'http://localhost:4200')\n","import * as R from 'ramda'\nimport { combineEpics, ofType } from 'redux-observable'\nimport { ignoreElements, tap, mergeMap, map } from 'rxjs/operators'\nimport { FETCH_PEN, dispatchSetPen } from './App.action'\nimport { getRequests } from '../../helper/request.helper'\n\nconst effectInitPenEpic = action$ =>\n  action$.pipe(\n    ofType(FETCH_PEN),\n    map(R.prop('payload')),\n    mergeMap(({ _id }) =>\n      getRequests('/fetchSinglePen')\n        .query({ _id })\n        .catch(() => console.log('couldnt fetch')),\n    ),\n    map(R.prop('body')),\n    tap(console.log),\n    tap(dispatchSetPen),\n    ignoreElements(),\n  )\n//\nexport default combineEpics(effectInitPenEpic)\n","import request from 'superagent'\nimport config from '../setup/config'\n\nexport const getRequests = path =>\n  request.get(config + path).set('Access-Control-Allow-Origin', '*')\n\nexport const postRequests = path =>\n  request.post(config + path).set('Access-Control-Allow_Origin', '*')\n","// modules\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux'\nimport { createEpicMiddleware, combineEpics } from 'redux-observable'\n\n// reducers\nimport AppReducer from '../components/App/App.reduer'\n\n// epics\nimport AppEpic from '../components/App/App.effect'\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        name: 'pennelite-inline',\n      })\n    : compose\n/* eslint-enable */\n\nconst rootEpic = combineEpics(AppEpic)\nconst epicMiddleware = createEpicMiddleware()\n\nconst store = createStore(\n  combineReducers({\n    App: AppReducer,\n  }),\n  composeEnhancers(applyMiddleware(epicMiddleware)),\n)\n// composeEnhancers(applyMiddleware(epicMiddleware)),\n\nepicMiddleware.run(rootEpic)\n\nexport const { dispatch, getState } = store\nexport default store\n","import React from 'react'\n\nexport default props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\"\n    id=\"Capa_1\"\n    x=\"0px\"\n    y=\"0px\"\n    width=\"512px\"\n    height=\"512px\"\n    viewBox=\"0 0 357 357\"\n    {...props}\n  >\n    <g>\n      <g>\n        <g id=\"fullscreen\">\n          <path\n            d=\"M51,229.5H0V357h127.5v-51H51V229.5z M0,127.5h51V51h76.5V0H0V127.5z M306,306h-76.5v51H357V229.5h-51V306z M229.5,0v51    H306v76.5h51V0H229.5z\"\n            data-original=\"#000000\"\n            data-old_color=\"#000000\"\n            fill=\"#444343\"\n          />\n        </g>\n      </g>\n    </g>{' '}\n  </svg>\n)\n","// Modules\nimport React from 'react'\nimport PropTypes from 'prop-types'\n// modules\nimport FullScreen from '../Svgs/FullScreen'\n// Styles\nimport './App.scss'\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.fullScreen = this.fullScreen.bind(this)\n  }\n\n  componentWillMount() {\n    const { fetchPen } = this.props\n    if (window && window.W) {\n      window.W.loadData().then(({ customize: { _id } }) => {\n        if (_id) fetchPen({ _id })\n        window.W.start()\n      })\n    } else fetchPen({ _id: '' })\n}\n\n  componentDidUpdate() {\n    const { pen } = this.props\n    const iframe = this.iframeRef.contentWindow.document\n    iframe.open()\n    iframe.write(`<html><body>${pen.html}</body></html>`)\n    iframe.write(`<style>${pen.css}</style>`)\n    iframe.write(`<script>${pen.js}</script>`)\n    iframe.close()\n  }\n\n  fullScreen() {\n    const iRef = this.iframeRef\n    if (!document.fullscreenElement) {\n      iRef\n        .requestFullscreen()\n        .then({})\n        .catch(err => {\n          console.log(\n            `Error attempting to enable full-screen mode: ${err.message} (${\n            err.name\n            })`,\n          )\n        })\n    } else {\n      document.exitFullscreen()\n    }\n  }\n\n  render() {\n    const { pen: { title } } = this.props\n    return (\n      <div className='root'>\n        <div className='title'>{title}</div>\n        <iframe\n          frameBorder=\"1\"\n          style={{ border: 'none', background: 'black' }}\n          allowFullScreen\n          title=\"peneliteInlineIframe\"\n          id=\"iframeId\"\n          ref={iframe => {\n            this.iframeRef = iframe\n          }}\n          width=\"100%\"\n        />\n        <FullScreen onClick={this.fullScreen} className='fullScreen' />\n      </div>\n    )\n  }\n}\n\nApp.propTypes = {\n  // fetchPen: PropTypes.func,\n  // pen: PropTypes.objectOf(PropTypes.string),\n}\n\nApp.defaultProps = {\n  // fetchPen: null,\n  // pen: {},\n}\n","// modules\nimport { connect } from 'react-redux'\n// components\nimport App from './App'\n// views\nimport { penView } from './App.reduer'\n\n// actions\nimport { dispatchFetchPen } from './App.action'\n\nconst mapStateToProps = () => ({\n  pen: penView(),\n})\n\nconst mapDispatchToProps = () => ({\n  fetchPen: dispatchFetchPen,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App)\n","// Modules\nimport React from 'react'\nimport { Provider } from 'react-redux'\n// Setup\nimport store from './redux'\nimport './root.scss'\n// Component\nimport App from '../components/App/App.container'\n\nexport default () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n","// modules\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { AppContainer } from 'react-hot-loader'\n// components\nimport Root from './setup/root'\n\nconst renderPenneliteInline = () =>\n  render(\n    <AppContainer>\n      <Root />\n    </AppContainer>,\n    window.document.getElementById('root'),\n  )\n\nrenderPenneliteInline()\n\n// Hot Module Replacement API\nif (module.hot) module.hot.accept('./setup/root', renderPenneliteInline)\n"],"sourceRoot":""}